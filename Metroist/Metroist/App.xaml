<?xml version="1.0" encoding="utf-8"?>
<Application xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:local="clr-namespace:Metroist" xmlns:controls="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls" xmlns:controlsPrimitives="clr-namespace:Microsoft.Phone.Controls.Primitives;assembly=Microsoft.Phone.Controls" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone" xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone" xmlns:converter="clr-namespace:Metroist.Converter" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="Metroist.App" xmlns:vm="clr-namespace:Metroist.ViewModel">

    <!--Application Resources-->
    <Application.Resources>

        <converter:ConverterProjectColor x:Key="ConverterProjectColor" />
        <converter:ConverterPanoramaProjectColor x:Key="ConverterPanoramaProjectColor" />
        <converter:ConverterVisibility x:Key="ConverterVisibility" />
        <converter:ConverterStatusTask x:Key="ConverterStatusTask" />
        <converter:ConverterTaskProjectColor x:Key="ConverterTaskProjectColor" />
        <converter:ConverterTaskProjectName x:Key="ConverterTaskProjectName" />
        <converter:ConverterDueDateTask x:Key="ConverterDueDateTask" />
        <converter:ConverterListItemAccent x:Key="ConverterListItemAccent" />
        <converter:ConverterCountingTasksFromProject x:Key="ConverterCountingTasksFromProject" />
        <converter:ConverterMonthName x:Key="ConverterMonthName" />
        <converter:ConverterChangeDay x:Key="ConverterChangeDay" />
        <converter:ConverterChangeYear x:Key="ConverterChangeYear" />
        <converter:ConverterStringMonthYear x:Key="ConverterStringMonthYear" />
        <converter:ConverterTest x:Key="ConverterTest" />
        <converter:ConverterTimezoneName x:Key="ConverterTimezoneName" />
        <converter:ConvertDateToString x:Key="ConvertDateToString" /> 
        <converter:ConvertTimestampToDateString x:Key="ConvertTimestampToDateString" />

        <SolidColorBrush x:Key="ProjectColor0">#95EF63</SolidColorBrush>
        <SolidColorBrush x:Key="ProjectColor1">#FF8581</SolidColorBrush>
        <SolidColorBrush x:Key="ProjectColor2">#FFC471</SolidColorBrush>
        <SolidColorBrush x:Key="ProjectColor3">#F9EC75</SolidColorBrush>
        <SolidColorBrush x:Key="ProjectColor4">#A8C8E4</SolidColorBrush>
        <SolidColorBrush x:Key="ProjectColor5">#D2B8A3</SolidColorBrush>
        <SolidColorBrush x:Key="ProjectColor6">#D8A8E4</SolidColorBrush>
        <SolidColorBrush x:Key="ProjectColor7">#DDDDDD</SolidColorBrush>
        <SolidColorBrush x:Key="ProjectColor8">#FB886E</SolidColorBrush>
        <SolidColorBrush x:Key="ProjectColor9">#FFCC00</SolidColorBrush>
        <SolidColorBrush x:Key="ProjectColor10">#74E86F</SolidColorBrush>
        <SolidColorBrush x:Key="ProjectColor11">#3BD5FB</SolidColorBrush>
        <SolidColorBrush x:Key="ProjectColor12">#DC4FAD</SolidColorBrush>
        <SolidColorBrush x:Key="ProjectColor13">#AC193D</SolidColorBrush>
        <SolidColorBrush x:Key="ProjectColor14">#D24726</SolidColorBrush>
        <SolidColorBrush x:Key="ProjectColor15">#82BA00</SolidColorBrush>
        <SolidColorBrush x:Key="ProjectColor16">#03B3B2</SolidColorBrush>
        <SolidColorBrush x:Key="ProjectColor17">#008299</SolidColorBrush>
        <SolidColorBrush x:Key="ProjectColor18">#5DB2FF</SolidColorBrush>
        <SolidColorBrush x:Key="ProjectColor19">#0072C6</SolidColorBrush>
        <SolidColorBrush x:Key="ProjectColor20">#000</SolidColorBrush>
        <SolidColorBrush x:Key="ProjectColor21">#777</SolidColorBrush>

        <SolidColorBrush x:Key="WhiteColor">#FFFFFF</SolidColorBrush>
        <Color x:Key="WhiteColor2">#FFFFFF</Color>

        <!-- This is needed for the PullToRefreshPanel to detect Compressions! --><Style x:Key="NonParalaxPanorama" TargetType="controls:Panorama">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="controls:Panorama">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <local:NoParalaxBackgroundLayer x:Name="BackgroundLayer" HorizontalAlignment="Left" Grid.RowSpan="2">
                                <Border x:Name="background" Background="{TemplateBinding Background}" CacheMode="BitmapCache" />
                            </local:NoParalaxBackgroundLayer>
                            <local:NoParalaxTitleLayer x:Name="TitleLayer" CacheMode="BitmapCache" ContentTemplate="{TemplateBinding TitleTemplate}" Content="{TemplateBinding Title}" FontSize="187" FontFamily="{StaticResource PhoneFontFamilyLight}" HorizontalAlignment="Left" Margin="10,-76,0,9" Grid.Row="0" />
                            <controlsPrimitives:PanningLayer x:Name="ItemsLayer" HorizontalAlignment="Left" Grid.Row="1">
                                <ItemsPresenter x:Name="items" />
                            </controlsPrimitives:PanningLayer>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    	<Style x:Key="PhoneButtonBase" TargetType="ButtonBase">
    		<Setter Property="Background" Value="Transparent" />
    		<Setter Property="BorderBrush" Value="{StaticResource PhoneForegroundBrush}" />
    		<Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}" />
    		<Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}" />
    		<Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiBold}" />
    		<Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMediumLarge}" />
    		<Setter Property="Padding" Value="10,3,10,5" />
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="ButtonBase">
    					<Grid Background="Transparent">
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="CommonStates">
    								<VisualState x:Name="Normal" />
    								<VisualState x:Name="MouseOver" />
    								<VisualState x:Name="Pressed">
    									<Storyboard>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
    											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneBackgroundBrush}" />
    										</ObjectAnimationUsingKeyFrames>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
    											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneForegroundBrush}" />
    										</ObjectAnimationUsingKeyFrames>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ButtonBackground">
    											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneForegroundBrush}" />
    										</ObjectAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Disabled">
    									<Storyboard>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
    											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
    										</ObjectAnimationUsingKeyFrames>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ButtonBackground">
    											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
    										</ObjectAnimationUsingKeyFrames>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
    											<DiscreteObjectKeyFrame KeyTime="0" Value="Transparent" />
    										</ObjectAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    						<Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" Margin="{StaticResource PhoneTouchTargetOverhang}">
    							<ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
    						</Border>
    					</Grid>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<Style x:Key="PhoneRadioButtonCheckBoxBase" BasedOn="{StaticResource PhoneButtonBase}" TargetType="ToggleButton">
    		<Setter Property="Background" Value="{StaticResource PhoneRadioCheckBoxBrush}" />
    		<Setter Property="BorderBrush" Value="{StaticResource PhoneRadioCheckBoxBrush}" />
    		<Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMedium}" />
    		<Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilyNormal}" />
    		<Setter Property="HorizontalContentAlignment" Value="Left" />
    		<Setter Property="VerticalContentAlignment" Value="Center" />
    		<Setter Property="Padding" Value="0" />
    	</Style>
    	<Style x:Key="CheckBoxWithoutText" BasedOn="{StaticResource PhoneRadioButtonCheckBoxBase}" TargetType="CheckBox">
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="CheckBox">
    					<Grid Background="Transparent" Width="{TemplateBinding Width}">
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="CommonStates">
    								<VisualState x:Name="Normal" />
    								<VisualState x:Name="MouseOver" />
    								<VisualState x:Name="Pressed">
    									<Storyboard>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="CheckBackground">
    											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneRadioCheckBoxPressedBrush}" />
    										</ObjectAnimationUsingKeyFrames>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="CheckBackground">
    											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneRadioCheckBoxPressedBorderBrush}" />
    										</ObjectAnimationUsingKeyFrames>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckMark">
    											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneRadioCheckBoxCheckBrush}" />
    										</ObjectAnimationUsingKeyFrames>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="IndeterminateMark">
    											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneRadioCheckBoxCheckBrush}" />
    										</ObjectAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Disabled">
    									<Storyboard>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="CheckBackground">
    											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneRadioCheckBoxDisabledBrush}" />
    										</ObjectAnimationUsingKeyFrames>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="CheckBackground">
    											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
    										</ObjectAnimationUsingKeyFrames>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckMark">
    											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneRadioCheckBoxCheckDisabledBrush}" />
    										</ObjectAnimationUsingKeyFrames>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="IndeterminateMark">
    											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneRadioCheckBoxCheckDisabledBrush}" />
    										</ObjectAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    							<VisualStateGroup x:Name="CheckStates">
    								<VisualState x:Name="Checked">
    									<Storyboard>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CheckMark">
    											<DiscreteObjectKeyFrame KeyTime="0">
    												<DiscreteObjectKeyFrame.Value>
    													<Visibility>Visible</Visibility>
    												</DiscreteObjectKeyFrame.Value>
    											</DiscreteObjectKeyFrame>
    										</ObjectAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Unchecked" />
    								<VisualState x:Name="Indeterminate">
    									<Storyboard>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="IndeterminateMark">
    											<DiscreteObjectKeyFrame KeyTime="0">
    												<DiscreteObjectKeyFrame.Value>
    													<Visibility>Visible</Visibility>
    												</DiscreteObjectKeyFrame.Value>
    											</DiscreteObjectKeyFrame>
    										</ObjectAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    						<Grid Width="{TemplateBinding Width}">
    							<Grid.ColumnDefinitions>
    								<ColumnDefinition Width="32" />
    								<ColumnDefinition Width="*" />
    							</Grid.ColumnDefinitions>
    							<Border x:Name="CheckBackground" BorderBrush="{TemplateBinding Background}" BorderThickness="{StaticResource PhoneBorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Left" Height="32" IsHitTestVisible="False" VerticalAlignment="Center" Width="32" />
    							<Rectangle x:Name="IndeterminateMark" Fill="{StaticResource PhoneRadioCheckBoxCheckBrush}" HorizontalAlignment="Center" Height="16" IsHitTestVisible="False" Grid.Row="0" Visibility="Collapsed" VerticalAlignment="Center" Width="16" />
    							<Path x:Name="CheckMark" Data="M0,119 L31,92 L119,185 L267,0 L300,24 L122,250 z" Fill="{StaticResource PhoneRadioCheckBoxCheckBrush}" HorizontalAlignment="Center" Height="18" IsHitTestVisible="False" Stretch="Fill" StrokeThickness="2" StrokeLineJoin="Round" Visibility="Collapsed" VerticalAlignment="Center" Width="24" />
    						</Grid>
    					</Grid>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<Style x:Key="ListBoxTaskItemForProjectDetail" TargetType="ListBoxItem">
    		<Setter Property="Background" Value="Transparent" />
    		<Setter Property="BorderThickness" Value="0" />
    		<Setter Property="BorderBrush" Value="Transparent" />
    		<Setter Property="Padding" Value="0" />
    		<Setter Property="HorizontalContentAlignment" Value="Left" />
    		<Setter Property="VerticalContentAlignment" Value="Top" />
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="ListBoxItem">
    					<Border x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="CommonStates">
    								<VisualState x:Name="Normal" />
    								<VisualState x:Name="MouseOver" />
    								<VisualState x:Name="Disabled">
    									<Storyboard>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
    											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TransparentBrush}" />
    										</ObjectAnimationUsingKeyFrames>
    										<DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer" />
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    							<VisualStateGroup x:Name="SelectionStates">
    								<VisualState x:Name="Unselected">
    									<Storyboard>
    										<ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid" d:IsOptimized="True" />
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Selected">
    									<Storyboard>
    										<ColorAnimation Duration="0" To="#0C000000" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid" d:IsOptimized="True" />
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="SelectedUnfocused">
    									<Storyboard>
    										<ColorAnimation Duration="0" To="#05000000" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid" d:IsOptimized="True" />
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    							<VisualStateGroup x:Name="LayoutStates">
    								<VisualState x:Name="BeforeUnloaded" />
    								<VisualState x:Name="BeforeLoaded" />
    								<VisualState x:Name="AfterLoaded" />
    							</VisualStateGroup>
    							<VisualStateGroup x:Name="FocusStates">
    								<VisualState x:Name="Unfocused" />
    								<VisualState x:Name="Focused" />
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    						<Grid x:Name="grid" Background="#00000000">
    							<ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width, Height" Background="Black" />
    						</Grid>
    					</Border>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<SolidColorBrush x:Key="DarkGray" Color="#FFA3A3A3" />
        
    	<Color x:Key="CalendarBackNormalGray">#26000000</Color>
        <Color x:Key="CalendarBackDarkGray">#3F000000</Color>
        <SolidColorBrush x:Key="BackgroundDarker" Color="#FFB9B9B9" />
        <Color x:Key="ColorBackground">#FFF7F7F7</Color>
        
    <Style TargetType="ScrollViewer">
            <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollViewer">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ScrollStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="00:00:00.5" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Scrolling">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                            <DoubleAnimation Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="NotScrolling">
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="VerticalCompression">
                                    <VisualState x:Name="NoVerticalCompression" />
                                    <VisualState x:Name="CompressionTop" />
                                    <VisualState x:Name="CompressionBottom" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="HorizontalCompression">
                                    <VisualState x:Name="NoHorizontalCompression" />
                                    <VisualState x:Name="CompressionLeft" />
                                    <VisualState x:Name="CompressionRight" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="{TemplateBinding Padding}">
                                <ScrollContentPresenter x:Name="ScrollContentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                                <ScrollBar x:Name="VerticalScrollBar" IsHitTestVisible="False" Height="Auto" Width="5" HorizontalAlignment="Right" VerticalAlignment="Stretch" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Value="{TemplateBinding VerticalOffset}" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" />
                                <ScrollBar x:Name="HorizontalScrollBar" IsHitTestVisible="False" Width="Auto" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Value="{TemplateBinding HorizontalOffset}" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style></Application.Resources>

    <Application.ApplicationLifetimeObjects>
        <!--Required object that handles lifetime events for the application-->
        <shell:PhoneApplicationService Launching="Application_Launching" Closing="Application_Closing" Activated="Application_Activated" Deactivated="Application_Deactivated" />
    </Application.ApplicationLifetimeObjects>

</Application>